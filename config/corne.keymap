#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define BOTH 3

&sk { quick-release; };

/ {
    combos {
        compatible = "zmk,combos";

        bluetooth_layer {
            bindings = <&mo 3>;
            key-positions = <36 40>;
            layers = <0 1 2>;
            timeout-ms = <150>;
        };
    };

    macros {
        brightnessinc: brightnessinc {
            compatible = "zmk,behavior-macro";
            label = "BRIGHTNESSINC";
            #binding-cells = <0>;
            bindings =
                <&macro_wait_time 40>,
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp PG_UP>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_SHIFT>;
        };

        brightnessdec: brightnessdec {
            compatible = "zmk,behavior-macro";
            label = "BRIGHTNESSDEC";
            #binding-cells = <0>;
            bindings =
                <&macro_wait_time 40>,
                <&macro_press>,
                <&kp LCTRL &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp PAGE_DOWN>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_SHIFT>;
        };

        brightness100: brightness100 {
            compatible = "zmk,behavior-macro";
            label = "BRIGHTNESS100";
            #binding-cells = <0>;
            bindings =
                <&macro_wait_time 40>,
                <&macro_press>,
                <&kp LCTRL &kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp PAGE_UP>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_SHIFT &kp LEFT_ALT>;
        };

        brightness20: brightness20 {
            compatible = "zmk,behavior-macro";
            label = "BRIGHTNESS20";
            #binding-cells = <0>;
            bindings =
                <&macro_wait_time 40>,
                <&macro_press>,
                <&kp LCTRL &kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp PAGE_DOWN>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_SHIFT &kp LEFT_ALT>;
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            label = "CUT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            label = "COPY";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            label = "PASTE";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        alttab: alttab {
            compatible = "zmk,behavior-macro";
            label = "ALTTAB";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>;
        };

        return: return {
            compatible = "zmk,behavior-macro";
            label = "RETURN";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&tog 0>, <&macro_release>, <&kp LEFT_ALT>;
        };

        ctrlaltdel: ctrlaltdel {
            compatible = "zmk,behavior-macro";
            label = "CTRLALTDEL";
            #binding-cells = <0>;
            bindings =
                <&macro_wait_time 40>,
                <&macro_press>,
                <&kp LCTRL &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp DELETE>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_ALT>;
        };

        taskmngr: taskmngr {
            compatible = "zmk,behavior-macro";
            label = "TASKMNGR";
            #binding-cells = <0>;
            bindings =
                <&macro_wait_time 40>,
                <&macro_press>,
                <&kp LCTRL &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp ESCAPE>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_SHIFT>;
        };
    };

    behaviors {
        shifttogglecaps: shifttogglecaps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTTOGGLECAPS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPSLOCK>;

            tapping-term-ms = <400>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base_layer {
            bindings = <
&kp LEFT_ALT      &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O       &kp SEMICOLON  &kp ESC
&kp TAB           &kp A  &kp S  &kp D      &kp F  &kp G        &kp H      &kp J  &kp K      &kp L       &kp P          &kp BACKSPACE
&shifttogglecaps  &kp Z  &kp X  &kp V      &kp C  &kp B        &kp N      &kp M  &kp COMMA  &kp PERIOD  &kp SLASH      &kp SINGLE_QUOTE
                                &kp LCTRL  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp RGUI
            >;
        };

        Lower_layer {
            bindings = <
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp GRAVE        &kp MINUS     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans  &kp UNDERSCORE  &kp DOLLAR       &kp PERCENT           &kp CARET              &kp EQUAL        &kp PLUS      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PERIOD        &trans
&trans  &kp PIPE        &kp AMPERSAND    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH    &kp ASTERISK  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp LEFT_BRACE    &kp RIGHT_BRACE
                                         &trans                &trans                 &kp SPACE        &kp ENTER     &kp KP_NUMBER_0  &kp SLASH
            >;
        };

        Raise_layer {
            bindings = <
&trans  &none          &kp PRINTSCREEN  &kp C_MUTE           &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &alttab  &kp K_CONTEXT_MENU  &kp UP            &none       &brightnessdec  &brightnessinc
&trans  &kp PAGE_DOWN  &kp PAGE_UP      &kp HOME             &kp END            &kp DELETE         &copy    &kp LEFT            &kp DOWN          &kp RIGHT   &paste          &trans
&trans  &none          &kp KP_NUMLOCK   &kp C_AL_CALCULATOR  &taskmngr          &ctrlaltdel        &cut     &kp C_PREVIOUS      &kp C_PLAY_PAUSE  &kp C_NEXT  &brightness20   &brightness100
                                        &trans               &trans             &trans             &trans   &trans              &trans
            >;
        };

        ctrl_+_upper {
            bindings = <
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &none
&none  &bt BT_CLR    &none         &none         &none         &none           &none         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
                                   &none         &none         &none           &none         &none         &none
            >;
        };
    };
};
